%!PS-Adobe-2.0 EPSF-1.2
%%DocumentFonts: Helvetica-Bold Times-Italic
%%Pages: 1
%%BoundingBox: 58 151 566 777
%%EndComments

/IdrawDict 52 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica-Bold reencodeISO def
/Times-Italic reencodeISO def

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
printFont printSize scalefont setfont
/descender 0 printFont /FontBBox get 1 get printFont /FontMatrix
get transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 2 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

%%EndProlog

%I Idraw 9 Grid 6.46782 

%%Page: 1 1

Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u
/originalCTM matrix currentmatrix def

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -7.38461 -6.49997 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *Helvetica-Bold*-24-*
Helvetica-Bold 24 SetF
%I t
[ 1 0 0 1 111.692 252.154 ] concat
%I
[
(0.00)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *Helvetica-Bold*-24-*
Helvetica-Bold 24 SetF
%I t
[ 1 0 0 1 111.692 329.154 ] concat
%I
[
(0.20)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *Helvetica-Bold*-24-*
Helvetica-Bold 24 SetF
%I t
[ 1 0 0 1 111.692 406.154 ] concat
%I
[
(0.40)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *Helvetica-Bold*-24-*
Helvetica-Bold 24 SetF
%I t
[ 1 0 0 1 111.692 483.154 ] concat
%I
[
(0.60)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *Helvetica-Bold*-24-*
Helvetica-Bold 24 SetF
%I t
[ 1 0 0 1 111.692 560.154 ] concat
%I
[
(0.80)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *Helvetica-Bold*-24-*
Helvetica-Bold 24 SetF
%I t
[ 1 0 0 1 111.692 637.154 ] concat
%I
[
(1.00)
] Text
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *Helvetica-Bold*-24-*
Helvetica-Bold 24 SetF
%I t
[ 1 0 0 1 153.692 215.154 ] concat
%I
[
(0.00)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *Helvetica-Bold*-24-*
Helvetica-Bold 24 SetF
%I t
[ 1 0 0 1 319.692 215.154 ] concat
%I
[
(0.50)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *Helvetica-Bold*-24-*
Helvetica-Bold 24 SetF
%I t
[ 1 0 0 1 484.692 215.154 ] concat
%I
[
(1.00)
] Text
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.00508 0 0 1.00508 74.3547 -75.4198 ] concat
%I 2
82 310
445 310
2 MLine
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 75.6923 -73.8462 ] concat
%I 2
82 695
445 695
2 MLine
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 75.6923 -73.8462 ] concat
%I 2
98 714
98 291
2 MLine
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 75.6923 -73.8462 ] concat
%I 2
429 714
429 291
2 MLine
End

Begin %I MLine
%I b 13107
1 0 0 [2 2 2 2 2 2 2 2] 15 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 75.6923 -73.8462 ] concat
%I 101
98 414
99 415
99 417
99 418
99 420
99 421
99 423
99 425
99 426
99 428
99 429
99 431
99 433
99 434
99 436
99 438
99 440
99 441
99 443
99 445
99 446
99 448
99 450
100 452
100 454
101 455
101 457
102 459
103 461
104 463
106 465
108 466
110 468
113 470
117 472
121 474
125 476
130 478
136 480
143 481
151 483
159 485
168 487
178 489
189 491
200 493
212 495
225 497
237 499
250 501
264 503
277 504
290 506
302 508
315 510
327 512
338 514
349 516
359 518
368 520
376 522
384 524
391 525
397 527
402 529
406 531
410 533
414 535
417 537
419 539
421 540
423 542
424 544
425 546
426 548
426 550
427 551
427 553
428 555
428 557
428 559
428 560
428 562
428 564
428 565
428 567
428 569
428 571
428 572
428 574
428 576
428 577
428 579
428 580
428 582
428 584
428 585
428 587
428 588
428 590
429 591
101 MLine
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 75.6923 -73.8462 ] concat
%I 101
98 310
99 310
99 310
99 310
99 310
99 310
99 310
99 310
99 310
99 310
99 310
99 310
99 310
99 310
99 311
99 311
99 311
99 311
99 311
99 311
99 311
99 311
99 312
100 312
100 312
101 313
101 313
102 314
103 315
104 316
106 317
108 319
110 320
113 323
117 325
121 328
125 332
130 337
136 342
143 349
151 356
159 365
168 375
178 386
189 399
200 414
212 429
225 446
237 465
250 483
264 503
277 522
290 540
302 559
315 576
327 591
338 606
349 619
359 630
368 640
376 649
384 656
391 663
397 668
402 673
406 677
410 680
414 682
417 685
419 686
421 688
423 689
424 690
425 691
426 692
426 692
427 693
427 693
428 693
428 694
428 694
428 694
428 694
428 694
428 694
428 694
428 694
428 695
428 695
428 695
428 695
428 695
428 695
428 695
428 695
428 695
428 695
428 695
428 695
428 695
429 695
101 MLine
End

Begin %I MLine
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 75.6923 -73.8462 ] concat
%I 101
98 310
99 310
99 310
99 310
99 310
99 310
99 310
99 310
99 310
99 310
99 310
99 310
99 310
99 310
99 310
99 310
99 310
99 310
99 310
99 310
99 310
99 310
99 310
100 310
100 310
101 310
101 310
102 310
103 310
104 310
106 310
108 310
110 311
113 311
117 311
121 311
125 312
130 312
136 313
143 315
151 317
159 320
168 325
178 332
189 342
200 356
212 375
225 399
237 429
250 465
264 503
277 540
290 576
302 606
315 630
327 649
338 663
349 673
359 680
368 685
376 688
384 690
391 692
397 693
402 693
406 694
410 694
414 694
417 694
419 695
421 695
423 695
424 695
425 695
426 695
426 695
427 695
427 695
428 695
428 695
428 695
428 695
428 695
428 695
428 695
428 695
428 695
428 695
428 695
428 695
428 695
428 695
428 695
428 695
428 695
428 695
428 695
428 695
428 695
428 695
429 695
101 MLine
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 0 1.86304 -1.86304 0 65.8772 230.24 ] concat
%I
[
(Probability of correct topology)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1.76057 0 0 1.76057 346.426 577.418 ] concat
%I
[
(2.0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1.76057 0 0 1.76057 413.633 519.265 ] concat
%I
[
(1.0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1.76057 0 0 1.76057 448.209 436.188 ] concat
%I
[
(0.1)
] Text
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 2.06162 0 0 2.06162 -67.1054 -166.012 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-75-75-*
Times-Italic 14 SetF
%I t
[ 0.923077 0 0 0.923077 173.538 167.077 ] concat
%I
[
(P)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 0.923077 0 0 0.923077 186.462 167.077 ] concat
%I
[
(value)
] Text
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-75-75-*
Times-Italic 14 SetF
%I t
[ 0.923077 0 0 0.923077 534.462 773.538 ] concat
%I
[
(Fig. 4)
] Text
End

End %I eop

showpage

%%Trailer

end
